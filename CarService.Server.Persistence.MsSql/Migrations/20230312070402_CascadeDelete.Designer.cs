// <auto-generated />
using System;
using CarService.Server.Persistence.MsSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarService.Server.Persistence.MsSql.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230312070402_CascadeDelete")]
    partial class CascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarService.Server.Domain.Model.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarrantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarrantId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Procedures");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.Property<int>("WarrantTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.HasIndex("WarrantTypeId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Technician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Transition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("SourceStepId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceStepId")
                        .IsUnique()
                        .HasFilter("[SourceStepId] IS NOT NULL");

                    b.HasIndex("TargetStepId")
                        .IsUnique()
                        .HasFilter("[TargetStepId] IS NOT NULL");

                    b.ToTable("Transitions");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Warrant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentStepId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<int>("WarrantTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStepId");

                    b.HasIndex("TechnicianId");

                    b.HasIndex("WarrantTypeId");

                    b.ToTable("Warrants");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.WarrantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarrantTypes");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Note", b =>
                {
                    b.HasOne("CarService.Server.Domain.Model.Warrant", null)
                        .WithMany("Notes")
                        .HasForeignKey("WarrantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Step", b =>
                {
                    b.HasOne("CarService.Server.Domain.Model.Procedure", "Procedure")
                        .WithMany("Steps")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarService.Server.Domain.Model.WarrantType", "WarrantType")
                        .WithMany("Steps")
                        .HasForeignKey("WarrantTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");

                    b.Navigation("WarrantType");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Transition", b =>
                {
                    b.HasOne("CarService.Server.Domain.Model.Step", "SourceStep")
                        .WithOne("ForwardTransition")
                        .HasForeignKey("CarService.Server.Domain.Model.Transition", "SourceStepId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("CarService.Server.Domain.Model.Step", "TargetStep")
                        .WithOne("BackTransition")
                        .HasForeignKey("CarService.Server.Domain.Model.Transition", "TargetStepId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("SourceStep");

                    b.Navigation("TargetStep");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Warrant", b =>
                {
                    b.HasOne("CarService.Server.Domain.Model.Step", "CurrentStep")
                        .WithMany()
                        .HasForeignKey("CurrentStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarService.Server.Domain.Model.Technician", "Technician")
                        .WithMany("Warrants")
                        .HasForeignKey("TechnicianId");

                    b.HasOne("CarService.Server.Domain.Model.WarrantType", "WarrantType")
                        .WithMany()
                        .HasForeignKey("WarrantTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CurrentStep");

                    b.Navigation("Technician");

                    b.Navigation("WarrantType");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Procedure", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Step", b =>
                {
                    b.Navigation("BackTransition");

                    b.Navigation("ForwardTransition");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Technician", b =>
                {
                    b.Navigation("Warrants");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.Warrant", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("CarService.Server.Domain.Model.WarrantType", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
